# Copyright 2017-2020 Siemens AG
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including without
# limitation the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
# SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
# 
# Author(s): Fabian Russwurm, Thomas Riedmaier

- name: Check architecture for x86 installer
  set_fact:
    ImdiskInstallerFileName: "{{ImdiskInstallerX32FileName}}"
  when: ansible_architecture == "32-bit"

- name: Fetch ImDisk installer from "{{ftpserverURL}}/{{initialAnsibleFTPPath}}/{{ImdiskFTPDirname}}/{{ImdiskInstallerFileName}}"
  win_get_url: 
    url: "{{ftpserverURL}}/{{initialAnsibleFTPPath}}/{{ImdiskFTPDirname}}/{{ImdiskInstallerFileName}}"
    dest: "{{remoteUtilitiesFilePath}}{{ImdiskInstallerFileName}}"

- name: Check file size
  win_stat:
    path: "{{remoteUtilitiesFilePath}}{{ImdiskInstallerFileName}}"
  register: file_size

- name: Install imdisk by executing {{ImdiskInstallerFileName}}
  win_package:
    path: "{{remoteUtilitiesFilePath}}{{ImdiskInstallerFileName}}"
    product_id: imdisk
    arguments: /fullsilent
  when: file_size.stat.size > 200

- name: Create new ramdisk
  win_command: "imdisk -a -s {{RamDiskSize}} -m {{ramDiskMountpointLetter}}: -p \"/fs:ntfs /q /y\""
  args:
    creates: "{{ramDiskMountpointLetter}}:\\"
  when: file_size.stat.size > 200

- name: Ensure startup script directory exists
  win_file:
    path: "{{startupscriptDirectory}}"
    state: directory
  when: file_size.stat.size > 200

- name: Copy startup script to machine
  win_template:
    src: "{{startupscriptFilename}}"
    dest: "{{startupscriptDirectory}}\\{{startupscriptFilename}}"
  ignore_errors: True
  when: file_size.stat.size > 200

- name: Add task schedule to run script at start up
  win_scheduled_task:
    name: syncFluffiToRAM
    description: This service creates and sync the persistent file to a ram disk
    actions:
    - path: "{{startupscriptDirectory}}\\{{startupscriptFilename}}"
    triggers:
    - type: boot
    username: "{{ansible_user}}"
    password: "{{ansible_password}}"
    logon_type: password
    start_when_available: no
    run_level: highest
    state: present
    enabled: yes
  when: file_size.stat.size > 200

- fail:
    msg: lmDisk file is smaller than 200 Bytes
  when: file_size.stat.size <= 200